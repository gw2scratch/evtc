<Project Sdk="Microsoft.NET.Sdk.WindowsDesktop">

    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <TargetFramework>net6.0</TargetFramework>
        <RootNamespace>GW2Scratch.ArcdpsLogManager.Wpf</RootNamespace>
        <AssemblyName>GW2Scratch.ArcdpsLogManager.Wpf</AssemblyName>
        <UseWPF>true</UseWPF>
        <Company>GW2Scratch</Company>
        <Copyright>See https://github.com/gw2scratch/evtc/</Copyright>
        <Product>arcdps Log Manager</Product>
        <AssemblyTitle>arcdps Log Manager</AssemblyTitle>
    </PropertyGroup>

    <PropertyGroup>
        <ApplicationManifest>app.manifest</ApplicationManifest>
        <ApplicationIcon>../ArcdpsLogManager/Images/program_icon.ico</ApplicationIcon>
    </PropertyGroup>

    <ItemGroup>
        <None Update="app.manifest">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
    </ItemGroup>
    <ItemGroup>
        <PackageReference Include="Eto.Platform.Wpf" Version="2.5.11-ci-20210422.772645364"/>
    </ItemGroup>
    <ItemGroup>
        <ProjectReference Include="..\ArcdpsLogManager\ArcdpsLogManager.csproj"/>
    </ItemGroup>
    <PropertyGroup>
        <!-- Warning: This has to match the assembly name defined in ArcdpsLogManager.csproj -->
        <CoreDllFilename>GW2Scratch.ArcdpsLogManager</CoreDllFilename>
    </PropertyGroup>

    <!-- 
    This target sets the version in the metadata of the executable to be the same as the version
    of the core application assembly.
    
    Note that this does not seem to have any effect if using any combination of AfterTargets and BeforeTargets
    with Compile or Build, even though the assembly version is correctly retrieved.
    -->
    <Target Name="SetVersion" AfterTargets="ResolveReferences">
        <ItemGroup>
            <!-- 
            To find the filename of the core assembly, we go through all project references
            (this includes transitive references) and only keep the one with a matching name
            -->
            <CoreDllPath Include="@(_ResolvedProjectReferencePaths)" Condition="$([System.String]::Copy(%(Filename)).Contains('$(CoreDllFilename)'))"/>
        </ItemGroup>
        <Error Text="Core assembly dll ($(CoreDllFilename)) not found." Condition="@(CoreDllPath) == ''"/>
        <GetAssemblyIdentity AssemblyFiles="@(CoreDllPath)">
            <Output TaskParameter="Assemblies" ItemName="AssemblyInfo"/>
        </GetAssemblyIdentity>
        <Message Text="Updating version to %(AssemblyInfo.Version)"/>
        <PropertyGroup>
            <FileVersion>%(AssemblyInfo.Version)</FileVersion>
            <InformationalVersion>%(AssemblyInfo.Version)</InformationalVersion>
        </PropertyGroup>
    </Target>
</Project>
